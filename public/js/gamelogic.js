import { animals, questions } from './data.js';

let currentLevel = 1;
let questionCount = 0;
let maxQuestions = 5;
let score = 0;
let totalTime = 0; // –°—É–º–º–∞—Ä–Ω–æ–µ –≤—Ä–µ–º—è –∏–≥—Ä—ã
let timerId;       // —Ç–∞–π–º–µ—Ä —Ä–∞—É–Ω–¥–∞ (–æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç)
let timerInterval; // —Ç–∞–π–º–µ—Ä –æ–±—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–≤—Å–µ–π –∏–≥—Ä—ã)
let timeLimit;
let inputTimerId; // –¢–∞–π–º–µ—Ä 3-–≥–æ —É—Ä–æ–≤–Ω—è (–≤–≤–æ–¥ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã)
let currentQuestion = null; // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞

window.onload = () => {
  initGame();
};

// ------------------------------------------------
// 1) –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã
// ------------------------------------------------

function initGame() {
  startGlobalTimer();
  startGame();
}

function startGame() {
  document.getElementById('levelDisplay').textContent = `–£—Ä–æ–≤–µ–Ω—å: ${currentLevel}`;

  switch (currentLevel) {
    case 1:
      timeLimit = 30;
      startRoundTimer();
      generateQuestion();
      break;
    case 2:
      startLevel2();
      break;
    case 3:
      timeLimit = 10;
      startRoundTimer();
      generateQuestion();
      break;
  }
}

// ------------------------------------------------
// 2) –¢–∞–π–º–µ—Ä—ã
// ------------------------------------------------

let remainingTime; // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–µ–≥–æ—Å—è –≤—Ä–µ–º–µ–Ω–∏

// 1. –¢–∞–π–º–µ—Ä —Ä–∞—É–Ω–¥–∞
function startRoundTimer() {
  clearInterval(timerId); // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ç–∞–π–º–µ—Ä–∞, –µ—Å–ª–∏ –µ—Å—Ç—å

  remainingTime = timeLimit;
  displayTimeLeft(remainingTime);
  console.log(`[ROUND TIMER] –°—Ç–∞—Ä—Ç —Ç–∞–π–º–µ—Ä–∞: ${remainingTime} —Å–µ–∫.`);

  timerId = setInterval(() => {
    remainingTime--;
    console.log(`[ROUND TIMER] –û—Å—Ç–∞–ª–æ—Å—å: ${remainingTime} —Å–µ–∫.`);
    displayTimeLeft(remainingTime);

    if (remainingTime <= 0) {
      clearInterval(timerId); // üí° –í–ê–ñ–ù–û: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ö–æ–¥–æ–º
      console.warn(`[ROUND TIMER] ‚è≥ –í—Ä–µ–º—è –≤—ã—à–ª–æ! –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ ${currentLevel + 1}-–π —É—Ä–æ–≤–µ–Ω—å...`);
      nextLevel();
    }
  }, 1000);
}


// 2. –ì–ª–æ–±–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä
function startGlobalTimer() {
  clearInterval(timerInterval); // –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞
  console.log(`[GLOBAL TIMER] –°—Ç–∞—Ä—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞.`);
  
  timerInterval = setInterval(() => {
    totalTime++;
    const minutes = String(Math.floor(totalTime / 60)).padStart(2, '0');
    const seconds = String(totalTime % 60).padStart(2, '0');
    document.getElementById('totalTimeDisplay').textContent = `–û–±—â–µ–µ –≤—Ä–µ–º—è: ${minutes}:${seconds}`;

    console.log(`[GLOBAL TIMER] –û–±—â–µ–µ –≤—Ä–µ–º—è: ${minutes}:${seconds}`);
  }, 1000);
}

// 3. –õ–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (—á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –Ω–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—ë–º —Ç–∞–π–º–µ—Ä)
function checkAnswer(chosenAnimal, question) {
  let correctScore, wrongScore;
  switch (currentLevel) {
    case 1:
      correctScore = 10;
      wrongScore  = 5;
      break;
    case 2:
      correctScore = 15;
      wrongScore  = 10;
      break;
    case 3:
      correctScore = 20;
      wrongScore  = 10;
      break;
  }

  if (chosenAnimal[question.property] === question.value) {
    score += correctScore;
    document.getElementById('scoreDisplay').textContent = `–û—á–∫–∏: ${score}`;

    playAnimalSound(chosenAnimal.name);
    animateCorrect(chosenAnimal.name);

    console.log(`[ANSWER] ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${chosenAnimal.name}`);
    console.log(`[ANSWER] ‚ùå –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–∞–π–º–µ—Ä, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å`);

    setTimeout(() => {
      generateQuestion(); // –ü—Ä–æ—Å—Ç–æ –¥–∞—ë–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
    }, 1000);
  } else {
    score -= wrongScore;
    document.getElementById('scoreDisplay').textContent = `–û—á–∫–∏: ${score}`;
    animateWrong(chosenAnimal.name);

    console.log(`[ANSWER] ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${chosenAnimal.name}`);
  }
}

function stopGlobalTimer() {
  clearInterval(timerInterval);
}

// ------------------------------------------------
// 3) –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö
// ------------------------------------------------

function generateQuestion() {
  // –°–ª—É—á–∞–π–Ω—ã–π –≤–æ–ø—Ä–æ—Å
  const randomIndex = Math.floor(Math.random() * questions.length);
  const question = questions[randomIndex];
  showQuestion(question);

  // –°–º–µ—à–∏–≤–∞–µ–º –º–∞—Å—Å–∏–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö
  const chosenAnimals = shuffleArray([...animals]);

  // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤ —á–µ—Ç—ã—Ä—ë—Ö —Ç–æ—á–Ω–æ –µ—Å—Ç—å ¬´–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π¬ª
  const correctAnimal = animals.find(an => an[question.property] === question.value);
  if (correctAnimal && !chosenAnimals.includes(correctAnimal)) {
    chosenAnimals[Math.floor(Math.random() * chosenAnimals.length)] = correctAnimal;
  }

  showAnimals(chosenAnimals, question);
}

function showQuestion(q) {
  const questionElem = document.getElementById('question');
  questionElem.textContent = q.text;
}

function showAnimals(animalList, question) {
  const container = document.getElementById('animalContainer');
  container.innerHTML = ''; // –°—Ç–∏—Ä–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–≤–µ—Ä–µ–π

  animalList.forEach(animal => {
    const img = document.createElement('img');
    img.src = `assets/${getImageName(animal.name)}`;
    img.alt = animal.name;

    // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏
    img.classList.add(getAnimationClass(animal.name));

    // –ü—Ä–∏ –∫–ª–∏–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º
    img.addEventListener('click', () => {
      checkAnswer(animal, question);
    });

    container.appendChild(img);
  });
}

// ------------------------------------------------
// 4) –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∏ –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Ä–∞—É–Ω–¥–∞–º–∏
// ------------------------------------------------

function nextLevel() {
  stopAllTimers(); // –û—á–∏—â–∞–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —Ç–∞–π–º–µ—Ä—ã
  
  if (currentLevel === 2) {
      console.log("üéØ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ 3-–π —É—Ä–æ–≤–µ–Ω—å");
      currentLevel++;
      showLevelTransition(currentLevel);
      setTimeout(() => startLevel3(), 1500);
  } else if (currentLevel >= 3) {
      console.log("üéâ –ö–æ–Ω–µ—Ü –∏–≥—Ä—ã!");
      endGame();
  } else {
      currentLevel++;
      showLevelTransition(currentLevel);
      setTimeout(() => startGame(), 1500);
  }
}

// ------------------------------------------------
// 5) –§–∏–Ω–∏—à –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
// ------------------------------------------------

function endGame() {
  stopGlobalTimer();
  saveResult();

  if (score >= 300) {
    showEndMessage("üéâ –ü–æ–±–µ–¥–∞! üéâ", "#28a745"); // –ó–µ–ª—ë–Ω—ã–π —Ñ–æ–Ω
    startFireworks();
  } else {
    showEndMessage("‚è≥ –í—Ä–µ–º—è –≤—ã—à–ª–æ! –ù—É–∂–Ω–æ 300 –æ—á–∫–æ–≤!", "#dc3545"); // –ö—Ä–∞—Å–Ω—ã–π —Ñ–æ–Ω
  }

  setTimeout(() => {
    window.location.href = 'rating.html';
  }, 3000);
}


function showEndMessage(text, bgColor) {
  const endMessage = document.createElement("div");
  endMessage.textContent = text;
  endMessage.style.position = "fixed";
  endMessage.style.top = "50%";
  endMessage.style.left = "50%";
  endMessage.style.transform = "translate(-50%, -50%)";
  endMessage.style.padding = "20px";
  endMessage.style.fontSize = "2rem";
  endMessage.style.fontWeight = "bold";
  endMessage.style.color = "#fff";
  endMessage.style.background = bgColor;
  endMessage.style.borderRadius = "10px";
  endMessage.style.boxShadow = "0 4px 10px rgba(0, 0, 0, 0.3)";
  document.body.appendChild(endMessage);
}


function saveResult() {
  const playerName = localStorage.getItem('playerName') || '–ê–Ω–æ–Ω–∏–º';
  let rating = JSON.parse(localStorage.getItem('rating') || '[]');

  rating.push({ 
    name: playerName, 
    score, 
    totalTime 
  });
  rating.sort((a, b) => b.score - a.score);
  localStorage.setItem('rating', JSON.stringify(rating));
}

// ------------------------------------------------
// 6) –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏: –∞–Ω–∏–º–∞—Ü–∏–∏, –∑–≤—É–∫–∏, ...
// ------------------------------------------------

function playAnimalSound(animalName) {
  let soundFile = '';
  switch (animalName) {
    case '–°–ª–æ–Ω':    soundFile = 'elephant.mp3'; break;
    case '–£—Ç–∫–∞':    soundFile = 'duck.mp3';     break;
    case '–ö–µ–Ω–≥—É—Ä—É': soundFile = 'kangaroo.mp3'; break;
    case '–í–µ—Ä–±–ª—é–¥': soundFile = 'camel.mp3';    break;
    case '–î–µ–ª—å—Ñ–∏–Ω': soundFile = 'dolphin.mp3';    break;
    case '–û—Ä–µ–ª': soundFile = 'eagle.mp3';    break;
    case '–ú–µ–¥–≤–µ–¥—å': soundFile = 'bear.mp3';    break;
    case '–ß–µ—Ä–µ–ø–∞—Ö–∞': soundFile = 'tortila.mp3';    break; 
    case '–ö—Ä–æ–∫–æ–¥–∏–ª': soundFile = 'crocodile.mp3';    break;
  }
  if (soundFile) {
    const audio = new Audio(`assets/sounds/${soundFile}`);
    audio.play();
  }
}

function displayTimeLeft(t) {
  document.getElementById('roundTimer').textContent = `–û—Å—Ç–∞–ª–æ—Å—å: ${t} c–µ–∫.`;
}

function shuffleArray(arr) {
  return arr.sort(() => Math.random() - 0.5);
}

function animateCorrect(animalName) {
  const imgs = document.querySelectorAll('#animalContainer img');
  imgs.forEach(img => {
    if (img.alt === animalName) {
      img.classList.add('correct');
      setTimeout(() => {
        img.remove();
      }, 1000);
    }
  });
}

function animateWrong(animalName) {
  const imgs = document.querySelectorAll('#animalContainer img');
  let found = false;

  imgs.forEach(img => {
    if (img.alt.trim().toLowerCase() === animalName.trim().toLowerCase()) {
      img.classList.add('wrong-shake');
      found = true;
      setTimeout(() => {
        img.classList.remove('wrong-shake');
      }, 500);
    }
  });

  if (!found) {
    console.warn(`–ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è: ${animalName}`);
  }
}

function getImageName(animalName) {
  switch (animalName) {
    case '–°–ª–æ–Ω':    return 'elephant.png';
    case '–£—Ç–∫–∞':    return 'duck.png';
    case '–ö–µ–Ω–≥—É—Ä—É': return 'kenguru.png';
    case '–í–µ—Ä–±–ª—é–¥': return 'camel.png';
    case '–î–µ–ª—å—Ñ–∏–Ω': return 'dolphin.png';
    case '–û—Ä–µ–ª': return 'eagle.png';
    case '–ú–µ–¥–≤–µ–¥—å': return 'bear.png';
    case '–ß–µ—Ä–µ–ø–∞—Ö–∞': return 'tortila.png';
    case '–ö—Ä–æ–∫–æ–¥–∏–ª': return 'crocodile.png';
  }
}

function getAnimationClass(animalName) {
  switch (animalName) {
    case '–°–ª–æ–Ω': return 'elephant-walk';
    case '–£—Ç–∫–∞': return 'duck-swim';
    case '–ö–µ–Ω–≥—É—Ä—É': return 'kangaroo-jump';
    case '–í–µ—Ä–±–ª—é–¥': return 'camel-walk';
    case '–î–µ–ª—å—Ñ–∏–Ω': return 'dolphin-swim';
    case '–û—Ä–µ–ª': return 'eagle-fly';
    case '–ú–µ–¥–≤–µ–¥—å': return 'bear-walk';
    case '–ß–µ—Ä–µ–ø–∞—Ö–∞': return 'turtle-crawl';
    case '–ö—Ä–æ–∫–æ–¥–∏–ª': return 'crocodile-swim';
    default: return '';
  }
}

// ------------------------------------------------
// 7) –ö–Ω–æ–ø–∫–∞ "–ó–∞–≤–µ—Ä—à–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å" ‚Äì –¥–æ—Å—Ä–æ—á–Ω—ã–π –≤—ã—Ö–æ–¥
// ------------------------------------------------

document.getElementById('exitBtn').addEventListener('click', () => {
  if (currentLevel < 3) {
    nextLevel();
  } else {
    endGame(true);
  }
});

function showLevelTransition(levelNumber) {
  const levelTransition = document.getElementById('levelTransition');
  levelTransition.textContent = `–£—Ä–æ–≤–µ–Ω—å ${levelNumber}!`;
  levelTransition.style.opacity = '1';

  setTimeout(() => {
    levelTransition.style.opacity = '0';
  }, 2000);
}

function startFireworks() {
  const canvas = document.getElementById("fireworkCanvas");
  if (!canvas) return; // –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç–∞ –Ω–µ—Ç, –≤—ã—Ö–æ–¥–∏–º

  const ctx = canvas.getContext("2d");
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  canvas.style.display = "block";

  let particles = [];

  function createParticle(x, y) {
    const colors = ["#ff5733", "#ffbd33", "#33ff57", "#3357ff", "#f033ff"];
    return {
      x,
      y,
      radius: Math.random() * 3 + 2,
      color: colors[Math.floor(Math.random() * colors.length)],
      speedX: (Math.random() - 0.5) * 5,
      speedY: (Math.random() - 0.5) * 5,
      life: 50,
    };
  }

  function drawParticles() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    particles.forEach((p, i) => {
      ctx.beginPath();
      ctx.arc(p.x, p.y, p.radius, 0, Math.PI * 2);
      ctx.fillStyle = p.color;
      ctx.fill();
      p.x += p.speedX;
      p.y += p.speedY;
      p.life--;
      if (p.life <= 0) particles.splice(i, 1);
    });

    if (particles.length > 0) {
      requestAnimationFrame(drawParticles);
    } else {
      setTimeout(() => {
        canvas.style.display = "none"; // –£–±–∏—Ä–∞–µ–º —Ñ–µ–π–µ—Ä–≤–µ—Ä–∫ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
      }, 3000);
    }
  }

  for (let i = 0; i < 100; i++) {
    particles.push(createParticle(canvas.width / 2, canvas.height / 2));
  }

  drawParticles();
}

// –≤—Ç–æ—Ä–æ–π —É—Ä–æ–≤–µ–Ω—å: –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã—Ö –≤ –∫–æ—Ä–∑–∏–Ω—ã

let dragTimerId; // –¢–∞–π–º–µ—Ä –≤—Ç–æ—Ä–æ–≥–æ —É—Ä–æ–≤–Ω—è

function startLevel2() {
  console.log("üîπ –°—Ç–∞—Ä—Ç —É—Ä–æ–≤–Ω—è 2 ‚Äì –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∂–∏–≤–æ—Ç–Ω—ã—Ö");

  // –°–∫—Ä—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å
  document.getElementById('question').style.display = 'none';

  // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
  document.querySelector('.animated-title').textContent = '–†–∞–∑–º–µ—Å—Ç–∏—Ç–µ –∂–∏–≤–æ—Ç–Ω—ã—Ö –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º!';

  // –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ—Ä–∑–∏–Ω (–µ—Å–ª–∏ –µ—Å—Ç—å, –ø—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–µ–º)
  let binsContainer = document.getElementById('binsContainer');
  if (!binsContainer) {
      binsContainer = document.createElement('div');
      binsContainer.id = 'binsContainer';
      binsContainer.classList.add('bins-container');
      document.querySelector('.game-container').appendChild(binsContainer);
  }

  binsContainer.style.display = 'flex'; // –î–µ–ª–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤–∏–¥–∏–º—ã–º
  binsContainer.innerHTML = ''; // –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π

  // –°–æ–∑–¥–∞—ë–º —Ç—Ä–∏ –∫–æ—Ä–∑–∏–Ω—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏
  const binsData = [
      { id: 'predators', label: '–•–∏—â–Ω–∏–∫–∏', type: 'predators' },
      { id: 'herbivores', label: '–¢—Ä–∞–≤–æ—è–¥–Ω—ã–µ', type: 'herbivores' },
      { id: 'omnivores', label: '–í—Å–µ—è–¥–Ω—ã–µ', type: 'omnivores' }
  ];

  binsData.forEach(({ id, label, type }) => {
      const bin = document.createElement('div');
      bin.classList.add('bin');
      bin.id = id;
      bin.dataset.type = type; // –î–æ–±–∞–≤–ª—è–µ–º `dataset.type` –¥–ª—è —É–¥–æ–±–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
      bin.textContent = label;
      bin.addEventListener('dragover', allowDrop);
      bin.addEventListener('drop', (event) => drop(event, type)); // –ü–µ—Ä–µ–¥–∞–µ–º `type`
      binsContainer.appendChild(bin);
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–∞—Å—Å–∏–≤ –∂–∏–≤–æ—Ç–Ω—ã—Ö –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç—Å—è
  console.log("üîÑ –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∂–∏–≤–æ—Ç–Ω—ã—Ö...");
  shuffleArray(animals);

  spawnAnimalsForDrag(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∂–∏–≤–æ—Ç–Ω—ã—Ö
  startDragTimer(); // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä
}

function spawnAnimalsForDrag() {
  const container = document.getElementById('animalContainer');
  container.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  container.style.display = 'flex'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∂–∏–≤–æ—Ç–Ω—ã—Ö

  animals.forEach(animal => {
      const img = document.createElement('img');
      img.src = `assets/${getImageName(animal.name)}`;
      img.alt = animal.name;
      img.id = animal.name;
      img.classList.add("draggable-animal");
      img.draggable = true;

      // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
      if (animal.isPredator) img.dataset.type = "predators";
      else if (animal.isHerbivore) img.dataset.type = "herbivores";
      else img.dataset.type = "omnivores"; // –í—Å–µ—è–¥–Ω—ã–µ - –æ—Å—Ç–∞—Ç–æ–∫

      img.addEventListener('dragstart', drag);
      container.appendChild(img);
  });
}

window.allowDrop = function(event) {
  event.preventDefault();
};

window.drag = function(event) {
  event.dataTransfer.setData("text", event.target.id);
};

window.drop = function(event, category) {
  event.preventDefault();
  const animalId = event.dataTransfer.getData("text");
  const draggedAnimal = document.getElementById(animalId);

  if (!draggedAnimal) return;

  const correctCategory = draggedAnimal.dataset.type;
  
  if (correctCategory === category) {
      event.target.appendChild(draggedAnimal);
      draggedAnimal.draggable = false; // –ó–∞–ø—Ä–µ—â–∞–µ–º –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
      checkLevel2Completion();
  } else {
      animateWrong(draggedAnimal.alt);
  }
};

function checkLevel2Completion() {
  const remainingAnimals = document.querySelectorAll('#animalContainer img');

  if (remainingAnimals.length === 0) {
      clearInterval(dragTimerId); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–µ—Ä
      score += 100;
      document.getElementById('scoreDisplay').textContent = `–û—á–∫–∏: ${score}`;
      
      console.log("‚úÖ –í—Å–µ –∂–∏–≤–æ—Ç–Ω—ã–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã! –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ 3-–π —É—Ä–æ–≤–µ–Ω—å...");

      setTimeout(() => nextLevel(), 1500);
  }
}

function startDragTimer() {
  clearInterval(dragTimerId); // –£–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ç–∞–π–º–µ—Ä

  let timeLeft = 20;
  displayTimeLeft(timeLeft);

  dragTimerId = setInterval(() => {
      timeLeft--;
      displayTimeLeft(timeLeft);

      if (timeLeft <= 0) {
          clearInterval(dragTimerId);
          console.warn("‚è≥ –í—Ä–µ–º—è –≤—ã—à–ª–æ! –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ 3-–π —É—Ä–æ–≤–µ–Ω—å...");
          nextLevel();
      }
  }, 1000);
}

function startLevel3() {
  console.log("üìù –°—Ç–∞—Ä—Ç —É—Ä–æ–≤–Ω—è 3 ‚Äì –í–≤–æ–¥ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã");

  stopAllTimers(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Ç–∞–π–º–µ—Ä—ã

  // –°–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö —É—Ä–æ–≤–Ω–µ–π
  document.getElementById('binsContainer').style.display = 'none';
  document.getElementById('animalContainer').style.display = 'none';

  // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
  document.querySelector('.animated-title').textContent = '–ù–∞–π–¥–∏ –∂–∏–≤–æ—Ç–Ω–æ–µ –ø–æ –ø—Ä–∏–∑–Ω–∞–∫—É!';

  // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä 3-–≥–æ —É—Ä–æ–≤–Ω—è
  let level3Container = document.getElementById('level3Container');
  level3Container.classList.remove('input_hidden');

  // ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö
  generateTextQuestion();

  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
  let inputField = document.getElementById('animalInput');
  inputField.value = '';

  // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –≤–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞
  document.getElementById('submitAnswer').onclick = checkTextAnswer;
  inputField.addEventListener('keypress', (e) => {
      if (e.key === 'Enter') {
          checkTextAnswer();
      }
  });

  console.log("[LEVEL 3 TIMER] –ó–∞–ø—É—Å–∫ —Ç–∞–π–º–µ—Ä–∞ –Ω–∞ –≤–≤–æ–¥ (30 —Å–µ–∫)");
  startInputTimer();
}

function generateTextQuestion() {
  if (!animals || animals.length === 0) {
      console.error("‚ùå –û—à–∏–±–∫–∞: –º–∞—Å—Å–∏–≤ animals –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–ª–∏ –ø—É—Å—Ç!");
      return;
  }

  const randomIndex = Math.floor(Math.random() * questions.length);
  currentQuestion = questions[randomIndex]; // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å

  console.log(`[LEVEL 3] –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å: ${currentQuestion.text}`);

  let questionElem = document.getElementById('question');
  questionElem.textContent = currentQuestion.text;
  questionElem.style.display = 'block';

  let correctAnimals = animals.filter(an => an[currentQuestion.property] === currentQuestion.value);
  
  if (correctAnimals.length === 0) {
      console.error("‚ùå –û—à–∏–±–∫–∞! –ù–µ—Ç –∂–∏–≤–æ—Ç–Ω—ã—Ö —Å —Ç–∞–∫–∏–º –ø—Ä–∏–∑–Ω–∞–∫–æ–º.");
      return;
  }

  console.log(`[LEVEL 3] –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ:`, correctAnimals.map(a => a.name));

  let correctAnimal = correctAnimals[Math.floor(Math.random() * correctAnimals.length)];

  let otherAnimals = animals.filter(an => an.name !== correctAnimal.name);
  shuffleArray(otherAnimals);
  let displayedAnimals = [correctAnimal, otherAnimals[0], otherAnimals[1]];
  shuffleArray(displayedAnimals);

  console.log(`[LEVEL 3] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∂–∏–≤–æ—Ç–Ω—ã—Ö:`, displayedAnimals.map(a => a.name));

  showLevel3Animals(displayedAnimals);
}

function checkTextAnswer() {
  let inputText = document.getElementById('animalInput').value.trim().toLowerCase();
  if (!inputText) return;

  let correctAnimals = animals.filter(an => an[currentQuestion.property] === currentQuestion.value);
  let isCorrect = correctAnimals.some(an => an.name.toLowerCase() === inputText);

  if (isCorrect) {
      score += 20;
      document.getElementById('scoreDisplay').textContent = `–û—á–∫–∏: ${score}`;
      
      // –£–¥–∞–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ
      const correctAnimalImg = document.querySelector(`img[alt="${inputText}"]`);
      if (correctAnimalImg) {
          correctAnimalImg.remove();
      }

      // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫
      playAnimalSound(inputText);

      document.getElementById('animalInput').value = "";
      questionCount++;

      if (questionCount >= maxQuestions) {
          console.log("‚úÖ –£—Ä–æ–≤–µ–Ω—å 3 –ø—Ä–æ–π–¥–µ–Ω!");
          clearInterval(inputTimerId);
          nextLevel(); // –ó–∞–∫–∞–Ω—á–∏–≤–∞–µ–º 3-–π —É—Ä–æ–≤–µ–Ω—å
      } else {
          generateTextQuestion(); // –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
      }
  } else {
      document.getElementById('animalInput').classList.add('shake');
      setTimeout(() => document.getElementById('animalInput').classList.remove('shake'), 500);
  }
}

function startInputTimer() {
  clearInterval(inputTimerId); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–µ—Ä

  let timeLeft = 30;
  displayTimeLeft(timeLeft);

  inputTimerId = setInterval(() => {
      timeLeft--;
      displayTimeLeft(timeLeft);
      if (timeLeft <= 0) {
          clearInterval(inputTimerId);
          console.warn("‚è≥ –í—Ä–µ–º—è –Ω–∞ –≤–≤–æ–¥ –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å. –ó–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É...");
          endGame();
      }
  }, 1000);
}

function stopAllTimers() {
  clearInterval(timerId);      // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ —Ä–∞—É–Ω–¥–∞
  clearInterval(timerInterval); // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞
  clearInterval(dragTimerId);  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ 2 —É—Ä–æ–≤–Ω—è
  clearInterval(inputTimerId); // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–∞–π–º–µ—Ä–∞ 3 —É—Ä–æ–≤–Ω—è
  console.log("‚èπÔ∏è –í—Å–µ —Ç–∞–π–º–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.");
}


function showLevel3Animals(animalList) {
  const container = document.getElementById('level3AnimalContainer');
  
  // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
  if (!container) {
    const newContainer = document.createElement('div');
    newContainer.id = 'level3AnimalContainer';
    newContainer.classList.add('level3-animal-container');
    document.querySelector('.game-container').appendChild(newContainer);
  } else {
    container.innerHTML = ''; // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π
  }

  animalList.forEach(animal => {
    const img = document.createElement('img');
    img.src = `assets/${getImageName(animal.name)}`;
    img.alt = animal.name;
    img.classList.add('animal-img');

    document.getElementById('level3AnimalContainer').appendChild(img);
  });
}
